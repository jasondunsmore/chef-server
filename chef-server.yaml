heat_template_version: 2013-05-23

description: |
  This is a Heat template to deploy a single Linux server running the Open
  Source version of Chef Server.

parameter_groups:

- label: Server Settings
  parameters:
  - flavor
  - image

- label: Chef Settings
  parameters:
  - chef_username

- label: rax-dev-params
  # These are parameters that will not be displayed in the portal. The purpose
  # of these parameters are for users who are developing or testing newer or
  # different setups. If any of these parameters are changed, there is a good
  # chance this stack will fail to properly deploy.
  parameters:
  - server_hostname
  - kitchen
  - chef_version

parameters:

  server_hostname:
    label: Server Hostname
    description: Host name to give the Chef Server
    type: string
    default: Chef-Server
    constraints:
    - length:
        min: 1
        max: 64
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9-]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  image:
    label: Operating System
    description: |
      Server image used for all servers that are created as a part of this
      deployment
    type: string
    default: Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
    constraints:
    - allowed_values:
      - Ubuntu 12.04 LTS (Precise Pangolin) (PVHVM)
      description: Must be a supported operating system.

  flavor:
    label: Server Size
    description: |
      Rackspace Cloud Server flavor to use. The size is based on the amount of
      RAM for the provisioned server.
    type: string
    default: 2 GB General Purpose v1
    constraints:
    - allowed_values:
      - 1 GB General Purpose v1
      - 2 GB General Purpose v1
      - 4 GB General Purpose v1
      - 8 GB General Purpose v1
      - 15 GB I/O v1
      - 30 GB I/O v1
      - 512MB Standard Instance
      - 1GB Standard Instance
      - 2GB Standard Instance
      - 4GB Standard Instance
      - 8GB Standard Instance
      - 15GB Standard Instance
      - 30GB Standard Instance
      description: |
        Must be a valid Rackspace Cloud Server flavor for the region you have
        selected to deploy into.

  chef_username:
    label: Chef User
    description: Username to use when logging into Chef
    type: string
    default: admin
    constraints:
    - allowed_pattern: "^[a-zA-Z][a-zA-Z0-9]*$"
      description: |
        Must begin with a letter and contain only alphanumeric characters.

  kitchen:
    label: Kitchen
    description: URL for the kitchen to use
    type: string
    default: https://github.com/rackspace-orchestration-templates/chef-server

  chef_version:
    label: Chef Version
    description: Version of chef client to use
    type: string
    default: 11.12.8

resources:
  ssh_key:
    type: "OS::Nova::KeyPair"
    properties:
      name: { get_param: "OS::stack_id" }
      save_private_key: true

  chef_server:
    type: "Rackspace::Cloud::Server"
    properties:
      name: { get_param: server_hostname }
      flavor: { get_param: flavor }
      image: { get_param: image }
      key_name: { get_resource: ssh_key }
      metadata:
        rax-heat: { get_param: "OS::stack_id" }

  chef_server_setup:
    type: "OS::Heat::ChefSolo"
    depends_on: chef_server
    properties:
      username: root
      private_key: { get_attr: [ssh_key, private_key] }
      host: { get_attr: [chef_server, accessIPv4] }
      kitchen: { get_param: kitchen }
      chef_version: { get_param: chef_version }
      node:
        chef-server:
          configuration:
            chef_server_webui:
              web_ui_admin_user_name: { get_param: chef_username }
        rax:
          firewall:
            tcp: [ 80, 443 ]
        run_list: ["recipe[apt]",
                   "recipe[chef-server]",
                   "recipe[rax-firewall]"]

outputs:
  private_key:
    description: SSH Private Key
    value: { get_attr: [ssh_key, private_key] }

  server_ip:
    description: Server IP
    value: { get_attr: [chef_server, accessIPv4] }

  chef_url:
    description: Chef URL
    value:
      str_replace:
        template: "https://%server_ip%"
        params:
          "%server_ip%": { get_attr: [chef_server, accessIPv4] }

  chef_username:
    description: Chef Username
    value: { get_param: chef_username }
